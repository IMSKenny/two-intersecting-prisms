unit OutText;

interface

uses
   BGL, Display;

procedure OutTextXY(x, y: integer; S: string);
procedure SetTextColor(C: tPixel);

{=========================================================================}

implementation

const
   CharWidth: array[0..255] of byte = (
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3,
   2, 2, 3, 7, 3, 6, 5, 2, 3, 2, 3, 3, 2, 3, 2, 4,
   3, 2, 3, 3, 4, 3, 3, 3, 3, 3, 1, 2, 3, 3, 4, 4,
   8, 4, 4, 4, 4, 4, 4, 4, 4, 1, 3, 4, 4, 5, 4, 4,
   4, 4, 4, 4, 3, 4, 4, 5, 4, 5, 4, 2, 4, 2, 3, 5,
   2, 3, 3, 3, 3, 3, 3, 3, 3, 1, 2, 3, 1, 5, 3, 3,
   3, 3, 3, 3, 3, 3, 3, 5, 3, 3, 3, 3, 2, 3, 4, 4,
   4, 4, 4, 3, 5, 4, 7, 4, 4, 4, 4, 4, 5, 4, 4, 4,
   4, 4, 3, 4, 5, 4, 5, 4, 5, 6, 4, 5, 3, 4, 5, 4,
   3, 3, 3, 3, 5, 3, 5, 3, 3, 3, 3, 3, 5, 3, 3, 3,
   5, 5, 5, 3, 3, 3, 4, 4, 3, 4, 4, 4, 4, 4, 3, 3,
   5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
   5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 5, 5, 5, 3, 5, 5,
   3, 3, 3, 3, 5, 3, 4, 3, 5, 6, 4, 5, 3, 3, 5, 3,
   3, 3, 3, 3, 5, 3, 3, 4, 3, 2, 2, 6, 4, 3, 3, 2 );
   
   Font: array[0..255] of array [0..7] of byte =
   (
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0),
   (0, 94, 0, 0, 0, 0, 0, 0),
   (6, 0, 6, 0, 0, 0, 0, 0),
   (32, 104, 56, 108, 56, 44, 8, 0),
   (92, 214, 116, 0, 0, 0, 0, 0),
   (70, 38, 16, 8, 100, 98, 0, 0),
   (96, 84, 74, 52, 80, 0, 0, 0),
   (0, 6, 0, 0, 0, 0, 0, 0),
   (0, 124, 130, 0, 0, 0, 0, 0),
   (130, 124, 0, 0, 0, 0, 0, 0),
   (20, 14, 20, 0, 0, 0, 0, 0),
   (8, 28, 8, 0, 0, 0, 0, 0),
   (128, 64, 0, 0, 0, 0, 0, 0),
   (8, 8, 8, 0, 0, 0, 0, 0),
   (0, 64, 0, 0, 0, 0, 0, 0),
   (128, 96, 24, 6, 0, 0, 0, 0),
   (126, 66, 126, 0, 0, 0, 0, 0),
   (4, 126, 0, 0, 0, 0, 0, 0),
   (102, 82, 78, 0, 0, 0, 0, 0),
   (74, 78, 122, 0, 0, 0, 0, 0),
   (16, 24, 20, 126, 0, 0, 0, 0),
   (78, 74, 122, 0, 0, 0, 0, 0),
   (126, 74, 122, 0, 0, 0, 0, 0),
   (98, 18, 14, 0, 0, 0, 0, 0),
   (126, 74, 126, 0, 0, 0, 0, 0),
   (94, 82, 126, 0, 0, 0, 0, 0),
   (72, 0, 0, 0, 0, 0, 0, 0),
   (128, 72, 0, 0, 0, 0, 0, 0),
   (8, 20, 34, 0, 0, 0, 0, 0),
   (40, 40, 40, 0, 0, 0, 0, 0),
   (0, 34, 20, 8, 0, 0, 0, 0),
   (6, 90, 10, 14, 0, 0, 0, 0),
   (124, 130, 50, 74, 122, 66, 124, 128),
   (120, 20, 18, 126, 0, 0, 0, 0),               //A
   (126, 74, 74, 118, 0, 0, 0, 0),
   (126, 66, 66, 66, 0, 0, 0, 0),
   (126, 66, 66, 60, 0, 0, 0, 0),
   (126, 74, 74, 66, 0, 0, 0, 0),
   (126, 10, 10, 2, 0, 0, 0, 0),
   (126, 66, 82, 118, 0, 0, 0, 0),
   (126, 8, 8, 126, 0, 0, 0, 0),
   (126, 0, 0, 0, 0, 0, 0, 0),
   (32, 64, 62, 0, 0, 0, 0, 0),
   (126, 8, 8, 118, 0, 0, 0, 0),
   (126, 64, 64, 64, 0, 0, 0, 0),
   (126, 12, 16, 12, 126, 0, 0, 0),
   (126, 8, 16, 126, 0, 0, 0, 0),
   (126, 66, 66, 126, 0, 0, 0, 0),
   (126, 18, 18, 30, 0, 0, 0, 0), //P
   (126, 82, 34, 94, 0, 0, 0, 0),
   (126, 18, 50, 94, 0, 0, 0, 0),
   (78, 74, 74, 122, 0, 0, 0, 0),
   (2, 126, 2, 0, 0, 0, 0, 0),
   (62, 64, 64, 62, 0, 0, 0, 0),
   (30, 96, 96, 30, 0, 0, 0, 0),
   (126, 32, 16, 32, 126, 0, 0, 0),
   (118, 8, 8, 118, 0, 0, 0, 0),
   (2, 4, 120, 4, 2, 0, 0, 0),
   (66, 114, 78, 66, 0, 0, 0, 0),
   (254, 130, 0, 0, 0, 0, 0, 0),
   (2, 12, 48, 192, 0, 0, 0, 0),
   (130, 254, 0, 0, 0, 0, 0, 0),
   (8, 6, 12, 0, 0, 0, 0, 0),
   (128, 128, 128, 128, 128, 0, 0, 0),
   (2, 4, 0, 0, 0, 0, 0, 0),
   (116, 84, 124, 0, 0, 0, 0, 0),
   (126, 68, 124, 0, 0, 0, 0, 0),
   (124, 68, 68, 0, 0, 0, 0, 0),
   (124, 68, 126, 0, 0, 0, 0, 0),
   (124, 84, 92, 0, 0, 0, 0, 0),
   (8, 126, 8, 0, 0, 0, 0, 0),
   (124, 68, 252, 0, 0, 0, 0, 0),
   (126, 4, 124, 0, 0, 0, 0, 0),
   (122, 0, 0, 0, 0, 0, 0, 0),
   (128, 122, 0, 0, 0, 0, 0, 0),
   (126, 8, 116, 0, 0, 0, 0, 0),
   (126, 0, 0, 0, 0, 0, 0, 0),
   (124, 4, 124, 4, 120, 0, 0, 0),
   (124, 4, 120, 0, 0, 0, 0, 0),
   (124, 68, 124, 0, 0, 0, 0, 0),
   (252, 68, 124, 0, 0, 0, 0, 0),
   (124, 68, 252, 0, 0, 0, 0, 0),
   (124, 4, 4, 0, 0, 0, 0, 0),
   (92, 84, 116, 0, 0, 0, 0, 0),
   (4, 126, 68, 0, 0, 0, 0, 0),
   (60, 64, 124, 0, 0, 0, 0, 0),
   (28, 96, 28, 0, 0, 0, 0, 0),
   (29, 97, 25, 96, 28, 0, 0, 0),
   (108, 16, 108, 0, 0, 0, 0, 0),
   (124, 64, 252, 0, 0, 0, 0, 0),
   (68, 116, 76, 0, 0, 0, 0, 0),
   (16, 108, 130, 0, 0, 0, 0, 0),
   (0, 254, 0, 0, 0, 0, 0, 0),
   (130, 108, 16, 0, 0, 0, 0, 0),
   (2, 1, 2, 1, 0, 0, 0, 0),
   (0, 112, 78, 120, 0, 0, 0, 0),
   (120, 20, 18, 126, 0, 0, 0, 0),
   (126, 74, 74, 122, 0, 0, 0, 0),
   (126, 74, 74, 118, 0, 0, 0, 0),
   (126, 2, 2, 0, 0, 0, 0, 0),
   (192, 126, 66, 126, 192, 0, 0, 0),
   (126, 74, 74, 66, 0, 0, 0, 0),
   (66, 36, 24, 126, 24, 36, 66, 0),
   (66, 74, 74, 118, 0, 0, 0, 0),
   (126, 16, 8, 126, 0, 0, 0, 0),
   (126, 17, 9, 126, 0, 0, 0, 0),
   (126, 8, 8, 118, 0, 0, 0, 0),
   (64, 124, 2, 126, 0, 0, 0, 0),
   (126, 12, 16, 12, 126, 0, 0, 0),
   (126, 8, 8, 126, 0, 0, 0, 0),
   (126, 66, 66, 126, 0, 0, 0, 0),
   (126, 2, 2, 126, 0, 0, 0, 0),
   (126, 18, 18, 30, 0, 0, 0, 0),
   (126, 66, 66, 66, 0, 0, 0, 0),
   (2, 126, 2, 0, 0, 0, 0, 0),
   (94, 80, 80, 126, 0, 0, 0, 0),
   (30, 18, 126, 18, 30, 0, 0, 0),
   (118, 8, 8, 118, 0, 0, 0, 0),
   (126, 64, 64, 126, 192, 0, 0, 0),
   (30, 16, 16, 126, 0, 0, 0, 0),
   (126, 64, 126, 64, 126, 0, 0, 0),
   (126, 64, 126, 64, 126, 192, 0, 0),
   (2, 126, 72, 120, 0, 0, 0, 0),
   (126, 68, 124, 0, 126, 0, 0, 0),
   (126, 72, 120, 0, 0, 0, 0, 0),
   (66, 74, 74, 126, 0, 0, 0, 0),
   (126, 8, 126, 66, 126, 0, 0, 0),
   (94, 50, 18, 126, 0, 0, 0, 0),
   (116, 84, 124, 0, 0, 0, 0, 0),
   (124, 74, 122, 0, 0, 0, 0, 0),
   (124, 84, 108, 0, 0, 0, 0, 0),
   (124, 4, 4, 0, 0, 0, 0, 0),
   (64, 124, 68, 124, 64, 0, 0, 0),
   (124, 84, 92, 0, 0, 0, 0, 0),
   (68, 40, 124, 40, 68, 0, 0, 0),
   (84, 84, 108, 0, 0, 0, 0, 0),
   (124, 32, 124, 0, 0, 0, 0, 0),
   (124, 34, 124, 0, 0, 0, 0, 0),
   (124, 24, 100, 0, 0, 0, 0, 0),
   (120, 4, 124, 0, 0, 0, 0, 0),
   (124, 8, 16, 8, 124, 0, 0, 0),
   (124, 16, 124, 0, 0, 0, 0, 0),
   (124, 68, 124, 0, 0, 0, 0, 0),
   (124, 4, 124, 0, 0, 0, 0, 0),
   (84, 42, 84, 42, 84, 0, 0, 0),
   (90, 36, 90, 90, 36, 0, 0, 0),
   (90, 36, 90, 90, 36, 0, 0, 0),
   (0, 0, 254, 0, 0, 0, 0, 0),
   (8, 8, 255, 0, 0, 0, 0, 0),
   (20, 20, 255, 0, 0, 0, 0, 0),
   (8, 255, 0, 255, 0, 0, 0, 0),
   (8, 248, 8, 248, 0, 0, 0, 0),
   (20, 20, 252, 0, 0, 0, 0, 0),
   (20, 247, 0, 255, 0, 0, 0, 0),
   (0, 255, 0, 255, 0, 0, 0, 0),
   (20, 244, 4, 252, 0, 0, 0, 0),
   (20, 23, 16, 31, 0, 0, 0, 0),
   (8, 15, 8, 15, 0, 0, 0, 0),
   (20, 20, 31, 0, 0, 0, 0, 0),
   (8, 8, 248, 0, 0, 0, 0, 0),
   (0, 0, 15, 8, 8, 0, 0, 0),
   (8, 8, 15, 8, 8, 0, 0, 0),
   (8, 8, 248, 8, 8, 0, 0, 0),
   (0, 0, 255, 8, 8, 0, 0, 0),
   (8, 8, 8, 8, 8, 0, 0, 0),
   (8, 8, 255, 8, 8, 0, 0, 0),
   (0, 0, 255, 20, 20, 0, 0, 0),
   (0, 255, 0, 255, 8, 0, 0, 0),
   (0, 31, 16, 23, 20, 0, 0, 0),
   (0, 252, 4, 244, 20, 0, 0, 0),
   (20, 23, 16, 23, 20, 0, 0, 0),
   (20, 244, 4, 244, 20, 0, 0, 0),
   (0, 255, 0, 247, 20, 0, 0, 0),
   (20, 20, 20, 20, 20, 0, 0, 0),
   (20, 247, 0, 247, 20, 0, 0, 0),
   (20, 20, 23, 20, 20, 0, 0, 0),
   (8, 15, 8, 15, 8, 0, 0, 0),
   (20, 20, 244, 20, 20, 0, 0, 0),
   (8, 248, 8, 248, 8, 0, 0, 0),
   (0, 15, 8, 15, 8, 0, 0, 0),
   (0, 0, 31, 20, 20, 0, 0, 0),
   (0, 0, 252, 20, 20, 0, 0, 0),
   (0, 248, 8, 248, 8, 0, 0, 0),
   (8, 255, 8, 255, 8, 0, 0, 0),
   (20, 20, 255, 20, 20, 0, 0, 0),
   (8, 8, 8, 15, 0, 0, 0, 0),
   (0, 0, 248, 8, 8, 0, 0, 0),
   (255, 255, 255, 255, 255, 0, 0, 0),
   (240, 240, 240, 240, 240, 0, 0, 0),
   (255, 255, 255, 0, 0, 0, 0, 0),
   (0, 0, 255, 255, 255, 0, 0, 0),
   (15, 15, 15, 15, 15, 0, 0, 0),
   (252, 68, 124, 0, 0, 0, 0, 0),
   (124, 68, 68, 0, 0, 0, 0, 0),
   (4, 124, 4, 0, 0, 0, 0, 0),
   (124, 64, 252, 0, 0, 0, 0, 0),
   (124, 68, 254, 68, 124, 0, 0, 0),
   (108, 16, 108, 0, 0, 0, 0, 0),
   (124, 64, 124, 192, 0, 0, 0, 0),
   (60, 32, 124, 0, 0, 0, 0, 0),
   (124, 64, 124, 64, 124, 0, 0, 0),
   (124, 64, 124, 64, 124, 192, 0, 0),
   (4, 124, 72, 120, 0, 0, 0, 0),
   (124, 72, 120, 0, 124, 0, 0, 0),
   (124, 72, 120, 0, 0, 0, 0, 0),
   (68, 84, 124, 0, 0, 0, 0, 0),
   (124, 16, 124, 68, 124, 0, 0, 0),
   (92, 52, 124, 0, 0, 0, 0, 0),
   (42, 42, 42, 0, 0, 0, 0, 0),
   (72, 92, 72, 0, 0, 0, 0, 0),
   (98, 84, 72, 0, 0, 0, 0, 0),
   (73, 85, 99, 0, 0, 0, 0, 0),
   (0, 0, 254, 1, 2, 0, 0, 0),
   (64, 128, 127, 0, 0, 0, 0, 0),
   (16, 84, 16, 0, 0, 0, 0, 0),
   (72, 36, 72, 36, 0, 0, 0, 0),
   (14, 10, 14, 0, 0, 0, 0, 0),
   (0, 8, 0, 0, 0, 0, 0, 0),
   (0, 24, 0, 0, 0, 0, 0, 0),
   (0, 0, 56, 16, 8, 4, 0, 0),
   (0, 124, 4, 248, 0, 0, 0, 0),
   (9, 13, 11, 0, 0, 0, 0, 0),
   (0, 56, 56, 0, 0, 0, 0, 0),
   (0, 0, 0, 0, 0, 0, 0, 0));

var
   TC: tPixel;
   
function ord(ch: char): integer;
begin
   ord := ordAnsi(ch);
end;

function chr(c: integer): char;
begin
   chr := chrAnsi(c);
end;
   
procedure OutTextXY(x, y: integer; S: string );
var
   i, j, k: integer;
   yy: integer;
begin
   y := 2*y; x:= 2*x;
   for i:= 1 to length(s) do
      if s[i] in ['А'..'Я'] then
         s[i] := chr(ord('Ђ') + ord(s[i])- ord('А'))
      else if s[i] in ['а'..'п'] then
         s[i] := chr(ord('Ў') + ord(s[i]) - ord('б'))
      else  if s[i] in ['р'..'я'] then
         s[i] := chr(ord('а') + ord(s[i]) - ord('р'));

   for i := 1 to length(s) do begin
      for j := 0 to CharWidth[ord(s[i])] do 
      begin
         yy := y;
         var b: byte := Font[ord(s[i])][j];
         for k := 0 to 7 do 
         begin
            var res: Boolean;
            case k of
               0: res := b and 1 <> 0;
               1: res := b and 2 <> 0;
               2: res := b and 4 <> 0;
               3: res := b and 8 <> 0;
               4: res := b and 16 <> 0;
               5: res := b and 32 <> 0;
               6: res := b and 64 <> 0;
               7: res := b and 128 <> 0;
            end;
            
            if res then begin
               PutPixel(x, yy, TC );
               PutPixel(x+1, yy, TC );
               PutPixel(x, yy+1, TC );
               PutPixel(x+1, yy+1, TC );
            end;
            inc(yy, 2);
         end;
         inc(x, 2);
      end;
   end;

end;

procedure SetTextColor(C: tPixel );
begin
   TC := C;
end;

end. 